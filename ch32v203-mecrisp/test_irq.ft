\res MCU: ch32v2x
\res export EXTI EI_EVENR EI_INTENR EI_SWIEVR EI_INTFR
\res export PFIC PF_IPRR1 PF_IPR1 PF_ISR1 PF_GISR PF_IENR1 PF_IENR2
\res export PF_IPRR2 GPIOA GP_OUTDR GP_CFGHR AFIO AF_EXTICR1 EI_FTENR
\res export EI_RTENR

: ifl EXTI EI_INTFR + @ hex. ;

0 variable cnt
: icnt ( -- )
  cnt @ 1+ cnt !
  led1.on
  1 1 lshift EXTI EI_INTFR + bis!
  1 23 lshift PFIC PF_IPRR1 + bis!
;

: swinit ( -- )
  rcc.led.en
  led1.off
  \ ['] icnt irq-exti0 !
  ['] icnt irq-exti1 !
  1 1 lshift EXTI EI_INTENR + bis!
  1 23 lshift PFIC PF_IENR1 + bis!
;
: hwisr ( -- ) \ FIXME actually check which interrupt was invoked
  rcc.led.en
  led2.on
  1 15 lshift EXTI EI_INTFR + bis!
  1 24 lshift PFIC PF_IPRR2 + bis!
;
: hwinit ( -- )
  rcc.led.en
  led2.off
  ['] hwisr irq-collection !
  $f 28 lshift GPIOA GP_CFGHR + bic!
  8 28 lshift GPIOA GP_CFGHR + bis! \ PA15 input
  1 15 lshift GPIOA GP_OUTDR + bis! \ pull-up
  1 RCC RC_APB2PCENR + bis! \ enable AFIO
  1 15 lshift AFIO AF_EXTICR1 + bic! \ PA15 drives EXTI 15
  1 15 lshift EXTI EI_RTENR + bis! \ PA15 FT falling (leading) / RT rising (trailing) edge trigger
  1 15 lshift EXTI EI_INTENR + bis!
  1 24 lshift PFIC PF_IENR2 + bis!
;

: swi ( -- )
  1 1 lshift EXTI EI_SWIEVR + bis!
  cnt @ .
;

swinit
hwinit \ trigger with button push on PA15
