\ dma setup for ADC1 on DMA channel 1
\res MCU: ch32v2x
\res export DMA1 D_CFGRx D_CNTRx D_PADDRx D_MADDRx
\res export D_INTFR RCC RC_AHBPCENR

: dma1.clken ( -- ) 1 RCC RC_AHBPCENR + bis! ;
: dma1.clkdis ( -- ) 1 RCC RC_AHBPCENR + bic! ;

\ DMA1 D_CFGRx 3 d.ch + : addr of DMA1_CFGR3
: d.ch ( reg ch -- u ) 1- 20 * + ;

: dma1.chrst ( u -- )
  dup D_CFGRx swap d.ch DMA1 + 0 swap !
  dup D_CNTRx swap d.ch DMA1 + 0 swap !
  dup D_PADDRx swap d.ch DMA1 + 0 swap !
  D_MADDRx swap d.ch DMA1 + 0 swap !
;

: d.en ( CFGR -- ) 1 swap bis! ; \ eg. DMA1 D_CFGRx 1 d.ch + d.en enables ch 1
: d.dis ( CFGR -- ) 1 swap bic! ;
: d.cb ( CFGR -- ) 1 5 lshift swap bis! ; \ circular buffer
: d.nocb ( CFGR -- ) 1 5 lshift swap bic! ;
: d.psz ( CFGR sz -- ) \ eg. DMA1 D_CFGRx 2 d.ch + 1 d.psz for 16-bit peripheral data size for ch 2
  over 3 8 lshift swap bic!
  8 lshift swap bis!
;
: d.msz ( CFGR sz -- ) \ eg. DMA1 D_CFGRx 3 d.ch + 2 d.psz for 32-bit memory data size for ch 3
  over 3 10 lshift swap bic!
  10 lshift swap bis!
;
: d.pm ( CFGR -- ) 1 4 lshift swap  bic! ; \ peripheral to memory
: d.mp ( CFGR -- ) 1 4 lshift swap bis! ; \ memory to peripheral
: d.pinc ( CFGR -- ) 1 6 lshift swap bis! ; \ peripheral address increment by peripheral data size
: d.pnoinc ( CFGR -- ) 1 6 lshift swap bic! ; \ do not increment peripheral address
: d.minc ( CFGR -- ) 1 7 lshift swap bis! ; \ memory address increment
: d.mnoinc ( CFGR -- ) 1 7 lshift swap bic! ; \ do not increment memory address
: d.mmf ( CFGR -- ) 1 14 lshift swap bis! ; \ memory to memory mode
: d.nommf ( CFGR -- ) 1 14 lshift swap bic! ;

